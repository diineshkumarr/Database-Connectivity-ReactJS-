{"ast":null,"code":"var _jsxFileName = \"E:\\\\contact-form\\\\src\\\\Output.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Output = () => {\n  _s();\n  const [contacts, setContacts] = useState([]);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    // Fetch contacts from backend\n    axios.get('http://localhost:5000/api/contact').then(response => {\n      setContacts(response.data); // Save the contacts data to state\n    }).catch(err => {\n      console.error('Error fetching contacts:', err);\n      setError('Error fetching contacts');\n    });\n  }, []); // Empty dependency array to run only once when the component mounts\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Contacts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: contacts.map((contact, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [contact.firstName, \" \", contact.lastName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 68\n        }, this), /*#__PURE__*/_jsxDEV(\"em\", {\n          children: contact.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 40\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: `mailto:${contact.email}`,\n          children: contact.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 68\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: contact.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(Output, \"kl9iooCdQHqB6wGR02Su8EctS0g=\");\n_c = Output;\nexport default Output;\nvar _c;\n$RefreshReg$(_c, \"Output\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Output","_s","contacts","setContacts","error","setError","get","then","response","data","catch","err","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","contact","index","firstName","lastName","username","href","email","message","_c","$RefreshReg$"],"sources":["E:/contact-form/src/Output.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Output = () => {\r\n  const [contacts, setContacts] = useState([]);\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    // Fetch contacts from backend\r\n    axios.get('http://localhost:5000/api/contact')\r\n      .then(response => {\r\n        setContacts(response.data);  // Save the contacts data to state\r\n      })\r\n      .catch(err => {\r\n        console.error('Error fetching contacts:', err);\r\n        setError('Error fetching contacts');\r\n      });\r\n  }, []);  // Empty dependency array to run only once when the component mounts\r\n\r\n  return (\r\n    <div>\r\n      <h1>Contacts</h1>\r\n      {error && <p>{error}</p>} {/* Show error message if any */}\r\n      <ul>\r\n        {contacts.map((contact, index) => (\r\n          <li key={index}>\r\n            <strong>{contact.firstName} {contact.lastName}</strong><br />\r\n            <em>{contact.username}</em><br />\r\n            <a href={`mailto:${contact.email}`}>{contact.email}</a><br />\r\n            <p>{contact.message}</p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Output;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd;IACAC,KAAK,CAACS,GAAG,CAAC,mCAAmC,CAAC,CAC3CC,IAAI,CAACC,QAAQ,IAAI;MAChBL,WAAW,CAACK,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAE;IAC/B,CAAC,CAAC,CACDC,KAAK,CAACC,GAAG,IAAI;MACZC,OAAO,CAACR,KAAK,CAAC,0BAA0B,EAAEO,GAAG,CAAC;MAC9CN,QAAQ,CAAC,yBAAyB,CAAC;IACrC,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC,CAAC,CAAE;;EAET,oBACEN,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAChBb,KAAK,iBAAIL,OAAA;MAAAc,QAAA,EAAIT;IAAK;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAAC,GAAC,eAC1BlB,OAAA;MAAAc,QAAA,EACGX,QAAQ,CAACgB,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC3BrB,OAAA;QAAAc,QAAA,gBACEd,OAAA;UAAAc,QAAA,GAASM,OAAO,CAACE,SAAS,EAAC,GAAC,EAACF,OAAO,CAACG,QAAQ;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,eAAAlB,OAAA;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC7DlB,OAAA;UAAAc,QAAA,EAAKM,OAAO,CAACI;QAAQ;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAAAlB,OAAA;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACjClB,OAAA;UAAGyB,IAAI,EAAE,UAAUL,OAAO,CAACM,KAAK,EAAG;UAAAZ,QAAA,EAAEM,OAAO,CAACM;QAAK;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAAAlB,OAAA;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC7DlB,OAAA;UAAAc,QAAA,EAAIM,OAAO,CAACO;QAAO;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAJjBG,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAAChB,EAAA,CAhCID,MAAM;AAAA2B,EAAA,GAAN3B,MAAM;AAkCZ,eAAeA,MAAM;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}