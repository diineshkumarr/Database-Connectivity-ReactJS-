{"ast":null,"code":"var _jsxFileName = \"E:\\\\contact-form\\\\src\\\\Output.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Output.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Output = () => {\n  _s();\n  const [contacts, setContacts] = useState([]);\n  const [error, setError] = useState('');\n  const [editingContact, setEditingContact] = useState(null); // Store the contact currently being edited\n\n  useEffect(() => {\n    // Fetch contacts from backend\n    axios.get('http://localhost:5000/api/contact').then(response => {\n      setContacts(response.data); // Save the contacts data to state\n    }).catch(err => {\n      console.error('Error fetching contacts:', err);\n      setError('Error fetching contacts');\n    });\n  }, []); // Empty dependency array ensures it runs once on component mount\n\n  const handleEdit = contact => {\n    // When the Edit button is clicked, set the contact for editing\n    setEditingContact(contact);\n  };\n  const handleDelete = id => {\n    // Handle delete operation\n    axios.delete(`http://localhost:5000/api/contact/${id}`).then(response => {\n      setContacts(contacts.filter(contact => contact._id !== id)); // Remove the deleted contact from the state\n      alert('Contact deleted successfully');\n    }).catch(err => {\n      console.error('Error deleting contact:', err);\n      alert('Error deleting contact');\n    });\n  };\n  const handleUpdate = () => {\n    // Update the contact on the server\n    axios.put(`http://localhost:5000/api/contact/${editingContact._id}`, editingContact).then(response => {\n      setContacts(contacts.map(contact => contact._id === editingContact._id ? response.data : contact)); // Update the contact in state\n      setEditingContact(null); // Reset the editing form\n      alert('Contact updated successfully');\n    }).catch(err => {\n      console.error('Error updating contact:', err);\n      alert('Error updating contact');\n    });\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setEditingContact({\n      ...editingContact,\n      [name]: value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Contacts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this), editingContact ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Edit Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          e.preventDefault();\n          handleUpdate();\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"firstName\",\n          value: editingContact.firstName,\n          onChange: handleInputChange,\n          placeholder: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"lastName\",\n          value: editingContact.lastName,\n          onChange: handleInputChange,\n          placeholder: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          value: editingContact.username,\n          onChange: handleInputChange,\n          placeholder: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          value: editingContact.email,\n          onChange: handleInputChange,\n          placeholder: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"message\",\n          value: editingContact.message,\n          onChange: handleInputChange,\n          placeholder: \"Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Update Contact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this) :\n    /*#__PURE__*/\n    // If not editing, show the contacts list\n    _jsxDEV(\"ul\", {\n      children: contacts.map(contact => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-data\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [contact.firstName, \" \", contact.lastName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 70\n        }, this), /*#__PURE__*/_jsxDEV(\"em\", {\n          children: contact.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 42\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"email-form\",\n          href: `mailto:${contact.email}`,\n          children: contact.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 93\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: contact.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEdit(contact),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(contact._id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }, this)]\n      }, contact._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(Output, \"dGpkxYrHBQcRNMKPxTtFdAmKQNk=\");\n_c = Output;\nexport default Output;\nvar _c;\n$RefreshReg$(_c, \"Output\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Output","_s","contacts","setContacts","error","setError","editingContact","setEditingContact","get","then","response","data","catch","err","console","handleEdit","contact","handleDelete","id","delete","filter","_id","alert","handleUpdate","put","map","handleInputChange","e","name","value","target","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onSubmit","preventDefault","type","firstName","onChange","placeholder","lastName","username","email","message","className","href","onClick","_c","$RefreshReg$"],"sources":["E:/contact-form/src/Output.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './Output.css';\r\n\r\nconst Output = () => {\r\n  const [contacts, setContacts] = useState([]);\r\n  const [error, setError] = useState('');\r\n  const [editingContact, setEditingContact] = useState(null); // Store the contact currently being edited\r\n\r\n  useEffect(() => {\r\n    // Fetch contacts from backend\r\n    axios.get('http://localhost:5000/api/contact')\r\n      .then(response => {\r\n        setContacts(response.data);  // Save the contacts data to state\r\n      })\r\n      .catch(err => {\r\n        console.error('Error fetching contacts:', err);\r\n        setError('Error fetching contacts');\r\n      });\r\n  }, []);  // Empty dependency array ensures it runs once on component mount\r\n\r\n  const handleEdit = (contact) => {\r\n    // When the Edit button is clicked, set the contact for editing\r\n    setEditingContact(contact);\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    // Handle delete operation\r\n    axios.delete(`http://localhost:5000/api/contact/${id}`)\r\n      .then(response => {\r\n        setContacts(contacts.filter(contact => contact._id !== id)); // Remove the deleted contact from the state\r\n        alert('Contact deleted successfully');\r\n      })\r\n      .catch(err => {\r\n        console.error('Error deleting contact:', err);\r\n        alert('Error deleting contact');\r\n      });\r\n  };\r\n\r\n  const handleUpdate = () => {\r\n    // Update the contact on the server\r\n    axios.put(`http://localhost:5000/api/contact/${editingContact._id}`, editingContact)\r\n      .then(response => {\r\n        setContacts(contacts.map(contact => (contact._id === editingContact._id ? response.data : contact))); // Update the contact in state\r\n        setEditingContact(null);  // Reset the editing form\r\n        alert('Contact updated successfully');\r\n      })\r\n      .catch(err => {\r\n        console.error('Error updating contact:', err);\r\n        alert('Error updating contact');\r\n      });\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setEditingContact({ ...editingContact, [name]: value });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Contacts</h1>\r\n\r\n      {/* Display error message if there is one */}\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n\r\n      {/* If we are editing a contact, show the editing form */}\r\n      {editingContact ? (\r\n        <div>\r\n          <h2>Edit Contact</h2>\r\n          <form onSubmit={(e) => { e.preventDefault(); handleUpdate(); }}>\r\n            <input\r\n              type=\"text\"\r\n              name=\"firstName\"\r\n              value={editingContact.firstName}\r\n              onChange={handleInputChange}\r\n              placeholder=\"First Name\"\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              name=\"lastName\"\r\n              value={editingContact.lastName}\r\n              onChange={handleInputChange}\r\n              placeholder=\"Last Name\"\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              name=\"username\"\r\n              value={editingContact.username}\r\n              onChange={handleInputChange}\r\n              placeholder=\"Username\"\r\n            />\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={editingContact.email}\r\n              onChange={handleInputChange}\r\n              placeholder=\"Email\"\r\n            />\r\n            <textarea\r\n              name=\"message\"\r\n              value={editingContact.message}\r\n              onChange={handleInputChange}\r\n              placeholder=\"Message\"\r\n            />\r\n            <button type=\"submit\">Update Contact</button>\r\n          </form>\r\n        </div>\r\n      ) : (\r\n        // If not editing, show the contacts list\r\n        <ul>\r\n          {contacts.map((contact) => (\r\n            <li key={contact._id} className=\"list-data\">\r\n              <strong>{contact.firstName} {contact.lastName}</strong><br />\r\n              <em>{contact.username}</em><br />\r\n              <a className='email-form' href={`mailto:${contact.email}`}>{contact.email}</a><br />\r\n              <p>{contact.message}</p>\r\n              <button onClick={() => handleEdit(contact)}>Edit</button>\r\n              <button onClick={() => handleDelete(contact._id)}>Delete</button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Output;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}