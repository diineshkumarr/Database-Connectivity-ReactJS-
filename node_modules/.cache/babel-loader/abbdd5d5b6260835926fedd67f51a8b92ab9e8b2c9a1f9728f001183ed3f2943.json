{"ast":null,"code":"var _jsxFileName = \"E:\\\\contact-form\\\\src\\\\Output.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Output.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Output = () => {\n  _s();\n  const [contacts, setContacts] = useState([]);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    // Fetch contacts from backend\n    axios.get('http://localhost:5000/api/contact').then(response => {\n      setContacts(response.data); // Save the contacts data to state\n    }).catch(err => {\n      console.error('Error fetching contacts:', err);\n      setError('Error fetching contacts');\n    });\n  }, []); // Empty dependency array ensures it runs once on component mount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Contacts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this), contacts.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No contacts found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this) // Display when there are no contacts\n    : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: contacts.map(contact => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-data\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [contact.firstName, \" \", contact.lastName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 70\n        }, this), /*#__PURE__*/_jsxDEV(\"em\", {\n          children: contact.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 42\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: `mailto:${contact.email}`,\n          children: contact.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 70\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: contact.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this)]\n      }, contact._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(Output, \"kl9iooCdQHqB6wGR02Su8EctS0g=\");\n_c = Output;\nexport default Output;\nvar _c;\n$RefreshReg$(_c, \"Output\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Output","_s","contacts","setContacts","error","setError","get","then","response","data","catch","err","console","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","length","map","contact","className","firstName","lastName","username","href","email","message","_id","_c","$RefreshReg$"],"sources":["E:/contact-form/src/Output.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './Output.css';\r\n\r\nconst Output = () => {\r\n  const [contacts, setContacts] = useState([]);\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    // Fetch contacts from backend\r\n    axios.get('http://localhost:5000/api/contact')\r\n      .then(response => {\r\n        setContacts(response.data);  // Save the contacts data to state\r\n      })\r\n      .catch(err => {\r\n        console.error('Error fetching contacts:', err);\r\n        setError('Error fetching contacts');\r\n      });\r\n  }, []);  // Empty dependency array ensures it runs once on component mount\r\n\r\n  return (\r\n    <div>\r\n      <h1>Contacts</h1>\r\n\r\n      {/* Display error message if there is one */}\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n\r\n      {/* Check if contacts are available */}\r\n      {contacts.length === 0 ? (\r\n        <p>No contacts found.</p>  // Display when there are no contacts\r\n      ) : (\r\n        <ul>\r\n          {/* Map through the contacts and display them */}\r\n          {contacts.map((contact) => (\r\n            <li key={contact._id} className=\"list-data\"> {/* Using the contact ID as the key is better */}\r\n              <strong>{contact.firstName} {contact.lastName}</strong><br />\r\n              <em>{contact.username}</em><br />\r\n              <a href={`mailto:${contact.email}`}>{contact.email}</a><br />\r\n              <p>{contact.message}</p>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Output;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}